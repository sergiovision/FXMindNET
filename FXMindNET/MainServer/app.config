<?xml version="1.0" encoding="utf-8"?>

<configuration>
  <configSections>
    <section name="quartz" type="System.Configuration.NameValueSectionHandler, System, Version=1.0.5000.0,Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>
  </configSections>

  <connectionStrings configSource="FXMind.config">
  </connectionStrings>

  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4net1211">
        <arg key="configFile" value="FXMind.MainServer.log" />
        <arg key="level" value="INFO" />
        <arg key="configType" value="INLINE" />
      </factoryAdapter>
    </logging>
  </common>
  <appSettings>
    <add key="log4net.Internal.Debug" value="false" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <log4net>
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d [%t] %-5p %l - %m%n" />
      </layout>
    </appender>
    <appender name="GeneralLog" type="log4net.Appender.RollingFileAppender">
      <file value="FXMind.MainServer.log" />
      <appendToFile value="true" />
      <maximumFileSize value="1024KB" />
      <rollingStyle value="Size" />
      <layout type="log4net.Layout.PatternLayout">
        <!--    <conversionPattern value="%d{HH:mm:ss} [%t] %-5p %c - %m%n" /> -->
        <conversionPattern value="%d %-5p - %m%n" />
      </layout>
    </appender>
    <root>
      <level value="INFO" />
      <appender-ref ref="ConsoleAppender" />
      <appender-ref ref="GeneralLog" />
    </root>
  </log4net>

  <!-- 
    We use quartz.config for this server, you can always use configuration section if you want to.
    Configuration section has precedence here.  
  -->
  <quartz>
    <!-- Local Quartz Props -->
    <!--<add key="quartz.scheduler.instanceName" value="ServerScheduler"/> --> <!-- this prop shouldn't be set -->
    <add key="quartz.threadPool.type" value="Quartz.Simpl.SimpleThreadPool, Quartz" />
    <add key="quartz.threadPool.threadCount" value="10" />
    <add key="quartz.threadPool.threadPriority" value="Normal" />

    <!-- DB props -->
    <!-- <add key="quartz.jobStore.lockHandler.type" value="Quartz.Impl.AdoJobStore.UpdateLockRowSemaphore, Quartz" /> -->
    <add key="quartz.jobStore.driverDelegateType" value="Quartz.Impl.AdoJobStore.MySQLDelegate, Quartz" />
    <add key="quartz.jobStore.dataSource" value="default" />
    <!-- proper connection string will be attached at runtime -->
    <!--<add key="quartz.dataSource.default.connectionString" value="Server=localhost; Database=fx_mind; Uid=root; Pwd=everest" /> -->
    <add key="quartz.dataSource.default.provider" value="MySql-68" />
    <add key="quartz.jobStore.type" value="Quartz.Impl.AdoJobStore.JobStoreTX, Quartz" />
    <add key="quartz.jobStore.useProperties" value="true" />
    <add key="quartz.jobStore.tablePrefix" value="QRTZ_" />
    <add key="quartz.jobStore.clustered" value="false" />

    <!--    <add key="quartz.dbprovider.MySql-68.productName" value="MySQL, MySQL provider 6.8.3" />
    <add key="quartz.dbprovider.MySql-68.assemblyName" value="MySql.Data, Version=6.8.3.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
    <add key="quartz.dbprovider.MySql-68.connectionType" value="MySql.Data.MySqlClient.MySqlConnection, MySql.Data, Version=6.8.3.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
    <add key="quartz.dbprovider.MySql-68.commandType" value="MySql.Data.MySqlClient.MySqlCommand, MySql.Data, Version=6.8.3.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
    <add key="quartz.dbprovider.MySql-68.parameterType" value="MySql.Data.MySqlClient.MySqlParameter, MySql.Data, Version=6.8.3.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
    <add key="quartz.dbprovider.MySql-68.commandBuilderType" value="MySql.Data.MySqlClient.MySqlCommandBuilder, MySql.Data, Version=6.8.3.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
    <add key="quartz.dbprovider.MySql-68.parameterDbType" value="MySql.Data.MySqlClient.MySqlDbType, MySql.Data, Version=6.8.3.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
    <add key="quartz.dbprovider.MySql-68.parameterDbTypePropertyName" value="MySqlDbType" />
    <add key="quartz.dbprovider.MySql-68.parameterNamePrefix" value="?" />
    <add key="quartz.dbprovider.MySql-68.exceptionType" value="MySql.Data.MySqlClient.MySqlException, MySql.Data, Version=6.8.3.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
    <add key="quartz.dbprovider.MySql-68.useParameterNamePrefixInParameterCollection" value="true" />
    <add key="quartz.dbprovider.MySql-68.bindByName" value="true" />
    <add key="quartz.dbprovider.MySql-68.dbBinaryTypeName" value="Blob" /> -->

    <!-- clustering export props -->
    <!-- <add key="quartz.scheduler.exporter.type" value="Quartz.Simpl.RemotingSchedulerExporter, Quartz" />
    <add key="quartz.scheduler.exporter.port" value="555" />
    <add key="quartz.scheduler.exporter.bindName" value="QuartzScheduler" />
    <add key="quartz.scheduler.exporter.channelType" value="tcp" />
    <add key="quartz.scheduler.exporter.channelName" value="httpQuartz" /> -->
  </quartz>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="log4net" publicKeyToken="669e0ddf0bb1aa2a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.2.13.0" newVersion="1.2.13.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging" publicKeyToken="af08829b84f0328e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.0.0" newVersion="2.2.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.serviceModel>
  </system.serviceModel>
</configuration>